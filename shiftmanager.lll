{
	(def 'cmd () (calldataload  0x0))
	(def 'usraddr () (calldataload 0x20))
	(def 'TSI () (calldataload 0x40))
	(def 'timeslot () (calldataload 0x60))


	(karrayInit "shifts" "all" "all" "all" 4 0 0 0 0)
	(stdllInit "unassigned" "all" "all" "all" 0 0)
	(stdllInit "hours" "all" "all" "all" 0 0)
	[[0x0]](CALLER) ;Temporary

;	[[0x1]]0xSTORE THE TRADEFACTORY HERE??????????????????????????????????????????????????????????????? 

	(return 0 (lll{
		;Body

		(when (&& (= (cmd) "newshift") (= (CALLER) @@0x0))
			{
				(llAddLink "unassigned" (TSI) (timeslot)) 
			}
		)

		;All of the remaining  calls should only be carried out by a trade contract from the trade factory
;		[0x0]"check"
;		[0x20](CALLER)
;		(CALL (gass) @@0x1 0 0x0 0x40 0x40 0x20)
;		(unless (= @0x40 1) (STOP))

		(when (= (cmd) "add")
			{
				;Add link to user's linked list
				(unless (shiftllInited (usraddr))
					{
						(shiftllInit (usraddr) 0 0)
						(llAddLink "hours" (usraddr) 0)
					}
				)

				(shiftllAddLink (usraddr) (TSI) (timeslot))
				(llSet "hours" (usraddr) (+ (llGet "hours" (usraddr)) 1))

				;set ownership in array

				(karraySetE "shifts" (usraddr) (timeslot) 1)
			}
		)	

		(when (= (cmd) "rm")
			{
				;rm link from user's linked list
				(shiftllRmLink (usraddr) (TSI))
				;set ownership to 0
				(karraySetE "shifts" (usraddr) (timeslot) 0)
				(llSet "hours" (usraddr) (- (llGet "hours" (usraddr)) 1))
			}
		)

		(when (= (cmd) "marktrade")
			{
				;set ownership
				(karraySetE "shifts" (usraddr) (timeslot) 3)
			}
		)

		(when (= (cmd) "checktrade")
			{
				(if (= (karrayGetE "shifts" (usraddr) (shiftllGet (usraddr) (TSI))) 1)
					[0x0]1
					[0x0]0
				)
				(return 0x0 0x20)
			}
		)

	} 0))
}